## FindPlayer: finds the Player/Stage suite
## Copyright (C) 2008 Daniele "MadMage" Calisi

SET(PLAYER_INCLUDE_DIR "PLAYER_INCLUDE_DIR-NOTFOUND")
SET(PLAYERCORE_INCLUDE_DIR "PLAYERCORE_INCLUDE_DIR-NOTFOUND")
SET(PLAYER_LINK_DIRECTORIES "PLAYER_LINK_DIRECTORIES-NOTFOUND")
SET(PLAYER_LIBRARIES "")

IF (NOT "${CMAKE_CROSSCOMPILING}" STREQUAL TRUE)

	set(_searching_dir /usr;/usr/local)
	if(NOT "${ROOT_PLAYER}" STREQUAL "")
		list(INSERT _searching_dir 0 ${ROOT_PLAYER})
		set(ENV{PKG_CONFIG_PATH} "${ROOT_PLAYER}/lib/pkgconfig:$ENV{PKG_CONFIG_PATH}")
	endif(NOT "${ROOT_PLAYER}" STREQUAL "")

	foreach(_d ${_searching_dir})
		list(APPEND _to_search_inc ${_d}/include/player-2.0)
		list(APPEND _to_search_inc ${_d}/include/player-2.1)
		list(APPEND _to_search_inc ${_d}/include/player-3.0)
		list(APPEND _to_search_inc ${_d}/include/player-3.1)
	endforeach(_d ${_searching_dir})
	FIND_PATH(PLAYER_INCLUDE_DIR libplayerc++ ${_to_search_inc})
	FIND_PATH(PLAYERCORE_INCLUDE_DIR libplayercore ${_to_search_inc})

	foreach(_d ${_searching_dir})
		list(APPEND _to_search_lib ${_d}/lib)
		list(APPEND _to_search_lib ${_d}/lib64)
	endforeach(_d ${_searching_dir})
	FIND_LIBRARY(PLAYER_LINK_DIRECTORIES playerc++ ${_to_search_lib} NO_DEFAULT_PATH)

ELSE(NOT "${CMAKE_CROSSCOMPILING}" STREQUAL TRUE)
	MESSAGE(STATUS "Player support is not available for cross-compiled OpenRDK")
ENDIF (NOT "${CMAKE_CROSSCOMPILING}" STREQUAL TRUE)

IF(PLAYER_INCLUDE_DIR AND PLAYER_LINK_DIRECTORIES AND PLAYERCORE_INCLUDE_DIR)
	SET(PLAYER_FOUND "Yes")
	STRING(REGEX REPLACE ".*/([^/]*)$" "\\1" PLAYER_LIBRARIES ${PLAYER_LINK_DIRECTORIES})
	STRING(REGEX REPLACE "/[^/]*$" "" PLAYER_LINK_DIRECTORIES ${PLAYER_LINK_DIRECTORIES})
	IF(LINUX)
		SET(PLAYER_LIBRARIES ${PLAYER_LIBRARIES};libplayercore.so)
	ENDIF(LINUX)
	IF(MACOSX)
		SET(PLAYER_LIBRARIES ${PLAYER_LIBRARIES};libplayercore.dylib)
	ENDIF(MACOSX)
ENDIF(PLAYER_INCLUDE_DIR AND PLAYER_LINK_DIRECTORIES AND PLAYERCORE_INCLUDE_DIR)

# generating full-path libraries
if (NOT "x${PLAYER_LINK_DIRECTORIES}" STREQUAL "x")
	foreach(dir ${PLAYER_LINK_DIRECTORIES})
		foreach(lib ${PLAYER_LIBRARIES})
			set(__libfile __libfile-NOTFOUND CACHE INTERNAL "" FORCE)
			find_library(__libfile NAMES ${lib} HINTS ${dir} NO_DEFAULT_PATH)
			if (NOT "${__libfile}" STREQUAL "__libfile-NOTFOUND")
				list(APPEND __flib ${__libfile})
			endif (NOT "${__libfile}" STREQUAL "__libfile-NOTFOUND")
		endforeach(lib ${PLAYER_LIBRARIES})
	endforeach(dir ${PLAYER_LINK_DIRECTORIES})
endif (NOT "x${PLAYER_LINK_DIRECTORIES}" STREQUAL "x")
set(PLAYER_LIBRARIES ${__flib})

IF(PLAYER_FOUND)
	IF(PKG_CONFIG_FOUND)
		EXECUTE_PROCESS(COMMAND ${PKG_CONFIG_EXECUTABLE} playerc++ --modversion OUTPUT_VARIABLE ver OUTPUT_STRIP_TRAILING_WHITESPACE)
		EXECUTE_PROCESS(COMMAND ${PKG_CONFIG_EXECUTABLE} playerc++ --atleast-version=3.0 RESULT_VARIABLE res)
		IF(NOT ${res} EQUAL 0)
			SET(PLAYER_DEFINITIONS -DPLAYER_VERSION_LT_3)
			EXECUTE_PROCESS(COMMAND ${PKG_CONFIG_EXECUTABLE} playerc++ --atleast-version=2.1 RESULT_VARIABLE res)
			IF(NOT ${res} EQUAL 0)
				SET(PLAYER_DEFINITIONS -DPLAYER_VERSION_LT_2_1)
			ENDIF(NOT ${res} EQUAL 0)
		ENDIF(NOT ${res} EQUAL 0)
		SET(playerver "version ${ver}")
		verbose("Found Player ${playerver}")
	ELSE(PKG_CONFIG_FOUND)
		warning("Missing pkg-config: cannot configure correctly PLAYER_DEFINITIONS variable")
	ENDIF(PKG_CONFIG_FOUND)
ENDIF(PLAYER_FOUND)

# needed to avoid putting things in ccmake gui
set(PLAYER_INCLUDE_DIR "${PLAYER_INCLUDE_DIR}" CACHE INTERNAL "" FORCE)
set(PLAYERCORE_INCLUDE_DIR "${PLAYERCORE_INCLUDE_DIR}" CACHE INTERNAL "" FORCE)
set(PLAYER_LINK_DIRECTORIES "${PLAYER_LINK_DIRECTORIES}" CACHE INTERNAL "" FORCE)
SET(PLAYER_LIBRARIES "${PLAYER_LIBRARIES}" CACHE INTERNAL "" FORCE)
set(__libfile __libfile-NOTFOUND CACHE INTERNAL "" FORCE)

